--------------------------------------------------------------------------------
== AWS Global Infrastructure ==
  (Geographic) Regions       |
  Availability Zones         |
  Local Zones                |
  Edge Locations (CloudFront)|
  Wavelength                 |
  Ground Station             |
  Project Kuiper             |
                             |
  Availability Zone          | * AWS Data Centers are organized into Availability
                             |   Zones
                             |
                             | * Each availability zone is located at low-risk
                             |   locations.
                             |
                             | * There are multiple AZ and each of them is
                             |   separate by geographic regions
                             |
                             | * Each AZ is designed for independent failure zone
                             | * Thus, they are physically separated
                             | * The AZ are interconnected with high speed private links
                             |
  AWS Regions                | * Each region contains two or more availability zones
                             | * AWS has 22 regions worldwide and increasing
                             |
                             |
                             |
                             |
                             |
--------------------------------------------------------------------------------
== Cloud Computing Modes ==
 Infrafrastructure as a      | Contains the basic building blocks for cloud IT
 Service (IaaS)              |   Eg. VPC, EC2, EBS
                             |
                             | can be defined as a type of cloud computing which
                             | provides virtualized computing resources over the
                             | internet
                             |
 Platform as a Service (PaaS)| AWS manages the underlying infrastructure
                             |   (usually hardware and operating systems)
                             |   Eg. RDS, EMR, ElasticSearch
                             |
                             | Platform as a service is a complete development
                             | and deployment environment in the cloud, with
                             | resources that enable you to deliver everything
                             | from simple cloud based apps to sophisticated,
                             | cloud enabled enterprise applications.
                             |
 Software as a Service (SaaS)| Completed product that is run and managed by the
 (Serverless Computing)      |   service provider. Mostly referes to end-user
                             |   applications:
                             |     Eg, Web-based email, Office 365, Salesforce.com
                             |
                             | SaaS is a method of software delivery and
                             | licensing n which software is accessed online
                             | via a subscription rather than bought and
                             | installed on individual computers

*Scope of Responsibility*
  Terms
    Application and Data     | Application and the dat athat are taken from users
                             |
    Runtime                  | The environments in which our code runs
                             |
    Middleware               | The interface for our software
                             |
    Operating System         | The operating system that is running on the
                             | virtualization software
                             |
    Virtualization           | With virtualization, we can manage resources,
                             | privacy and security of users using the same
                             | hardware.
                             |
    Servers, storage and     | The hardware that we need and the interconnections
    networking.              | between them
                             |

  On premise is a computing model where all of the necessary components are
  managed by those whom implement.

  IAAS, PASS and SAAS are computing (cloud) models where certain aspects of
  the infrustructure are managed by you, and others are managed by the model's.
  provider.  If an aspect is not included in the model, it means that it is
  managed by the provider and outside the scope of responsibility of the user.

 On Premise          IAAS                PAAS                SAAS
`+----------------+  +----------------+  +----------------+  +----------------+`
`|  Application   |  |  Application   |  |  Application   |  |                |`
`|    Data        |  |    Data        |  |    Data        |  |                |`
`|  Runtime       |  |  Runtime       |  |                |  |                |`
`|  Middleware    |  |  Middleware    |  |                |  |                |`
`|    O/S         |  |    O/S         |  |                |  |                |`
`| Virtualization |  |                |  |                |  |                |`
`|   Servers      |  |                |  |                |  |                |`
`|   Storage      |  |                |  |                |  |                |`
`| Networking     |  |                |  |                |  |                |`
`+----------------+  +----------------+  +----------------+  +----------------+`

--------------------------------------------------------------------------------
== Deployment Models of the Cloud ==
  Private Cloud              | A private cloud, also known as internal or
                             | corporate cloud, is dedicated to the needs and
                             | goals of a single organization
                             |
                             | It is owned by the company which implemented it.
                             |
                             | This allows the organization to manage their
                             | sensitive data themselves, rather than b a third
                             | party
                             |
                             | These organizations coube be financial
                             | institutions, hospitals, security agencies,
                             | government establishments and so on.
                             |
                             | The private cloud is managed directly in the data
                             | center provided by the organization, in some
                             | other cases, it is provided by a third party
                             | cloud platform like AWS or google cloud platform
                             |
    Advantages               | * It is more secure
                             | * There is more control over all the resources
                             | * Performance level is also high as no resources
                             |   aren't being shared
                             |
  Public Cloud               | They are cloud resources wone and operated by a
                             | third part cloud service provider and they
                             | deliver their services over the internet
                             |
                             | It is a multi tenant environment
                             |
    Advantages               | * Easy access to new technology
                             | * It is cheap (in comparison to the private cloud model)
                             | * Easy to scale globally in a very hsort period of time
                             |
  Hybrid Cloud               | A combination of the private and public cloud
                             |
                             | Companies have the benefit of managing their
                             | sensitive data on premise and also benefit from
                             | different services offered by third party cloud
                             | platforms
                             |
--------------------------------------------------------------------------------
== Introduction to Cloud Design Principles ==
  * Elasticity
  * Servers and other resources are disposable
  * Automation
  * Design for failure
  * Loose Coupling
  * Parallelism
  * Build security at all layers

  *Think Elastic*              | Elasticity means the ability to increase and
                             | decrease resources as needed. It can be started
                             | with the minimum necessary resources, and as the
                             | application grows, the resources can be scaled as
                             | needed.
                             |
                             | Scaling can be horizontal or vertical.
                             |
    Horizontal Scaling       | Increase in the number of resources (Servers, hard disks)
                             | * Horizontal Scaling is more of a long term solution
                             |
    Vertical Scaling         | Increase the capacity of a given resoure
                             | (increaseing the ram of a server)
                             | * Vertical Scaling is for short term, because
                             | there is a limit on how much the capacity of a
                             | given machine can be increased
                             |
                             |
  *Servers and other resources*| All the resources served through the cloud are
  *are disposable*             | virtualized. This allows for more experimentation
                             | as resources can be used and freed at will
                             |
  *Automoation*                | Since all resources are virtualized, Everything
                             | that can be though of can be automated. With this
                             | we can create a system that can care for itself.
                             | The creating and destruction of servers, restarting
                             | Servers due to error(s), backing up databases,
                             | responding to attacks, self healing and monitoring
                             | can be automated, and respond to feedback from
                             | automation
                             |
  *Design for Failure*         | Assume any part can fail and cater for the
                             | potential failure. Set up automatic recovery and
                             | alerts.
                             |
  *Loose Coupling*             | Complexity grows with the size of the software
                             | we are building. Loose coupling makes it easy to
                             | cope with this complexity as an application can
                             | be seperated into indepedent parts which
                             | interacte with the whole. Meaning that they can
                             | be developed and managed by seperate teams.
                             |
                             | Failure of a part should not be ther failure of
                             | the whole application
                             |
                             | It is important to alwasy implement loose
                             | coupling at the early stage of a project.
                             |
  *Parallelism*                | Parallelism means many things can be handled at
                             | the same time which would save time. An example
                             | of this is request handling, A high load of
                             | requests can be divided between multiple servers.
                             |
  *Build Security in Every*    | Security of the layers that we are managing
  *Layer*                      | should be provided
                             |
                             | For example, in IAAS, security must be provided
                             | for the application, the data in transit and at
                             | rest.
                             |
--------------------------------------------------------------------------------
= Availability Zones =
                             | An Availability Zone (AZ) is one or more discrete
                             | data centes wit redundant power, networking, and
                             | connectivity in an AWS Region
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             | * Each AWS Region has multiple physically isolated
                             |   Availability Zones.
                             | * Connected to each other with fast, private fiber-
                             |   optic networking.
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
  Local Zones                | * Clost to large population, industry, and IT
                             |   centers.
                             | * Are an extension of an AWS Region
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
  Edge locations             | Edge locations are AWS data centers designed to
                             | Deliver services with the lowest latency possible.
                             | they are often in major cities
                             |
    Use cases of Edge        | * caching. Delivering content to users faster
    Locations                | * Firewall and DDOS protection
                             | * Leverage AWS global network
                             | * there are over 100 Edge locations which are used
                             |   for the CloudFront Delivery network
                             | * CloudFront CDN cached content at edge locations
                             |   for high performance delivery of content.
                             |
  AWS Wavelength             | * Allows parts of your application to use AWS
                             |   compute and storage services that are embedded
                             |   witin communications service providers' (CSP)
                             |   datacenters at the edge of the 5G network
                             | * This allows developers to low-latency to
                             |   Mobile devices
                             |
  Ground Station             | * Fully managed service that enables customers
                             |   to easily command, control, and downlink from
                             |   satellites.
                             | * Located within the AWS Global Infrastructure
                             |   footprint, Contacts (reservations) are scheduled
                             |   for an antenna to communicate with a satellite
                             |
  Project Kuiper             | * Kuiper Systems LLC is a subsidiary of Amazon.
                             | * Proposed constellation network of Low Earth
                             |   Orbit satellites
                             | * Provide low-latency, high-speed broadband
                             |   connectivity to unserved and underserved
                             |   communities around the world
                             | * Will extend low latency acess to the AWS cloud
                             |   from all areas of the world.
                             |
--------------------------------------------------------------------------------
== Other terms ==
  Virtual Private Cloud (vpc)| * The space within AWS cloud that contain servers
                             |   and will also contain EBS block devices
                             |
  VPC Endpoint               | * The point of contact for storage devices not
                             |   Hosted within the VPC. Examples are: S3 and
                             |   S3 Glacier
                             |

== Serverless Computing ==
                             | Allows you to build and run applications and
                             | services without thinking about servers.
                             | * Also reffered to as Function-as-a-Service (FaaS)
                             |   or Abstracted services.
                             | Examples:
                             |   * Amazon Simple Storage Service (S3) - file storage (bucket)
                             |   * AWS Lambda - running code in the cloud
                             |   * Amazon DynamoDB - nosql database running in the cloud
                             |   * Amazon SNS - Simple Notification Service
                             |

== Cloud Computing Deployment Models ==
  Cloud                      | Fully deployed in the cloud and all parts of
                             | the application run in the cloud.
                             |
  Hybrid                     | A way to connect infrastructure and applications
                             | between cloud-based resources and existing
                             | resources that are not located in the cloud.
                             | Run AWS infrastructure and service on premises
                             | with AWS Outposts
                             |
  On-premise                 | Deploying resources on-premises, using virtualization
                             | and resource management tools, is sometimes called
                             | "private cloud"

== AWS Management Console ==
                             | * Web-based user interface to AWS
                             | * Requires an AWS account
                             | * Monitor costs
                             | * AWS Console Mobile App

== SDK & CLI Access ==
  Software Development Kits  | * Create applications tha tuse AWS services.
                             | * SDKs for Javascript, Nodejs, Java, python
                             |   .NET, PHP, Ruby, Go, C++
                             | * Moble SDKs for Android, iOS, React Native,
                             |   Unity, Xamarin
                             | * Application Programming Interface enables access
                             |   to AWS usig http calls
                             |
  Command Line Interface     | * Control multiple AWS services from the command
                             |   line and automate them through scripts
                             |
  Important URLs             | * aws.amazon.com/certification
                             | * docs.aws.amazon.com
                             | * aws.amazon.com/whitepapers
                             | * aws.amazon.com/products
                             | * aws.amazon.com/new
                             |
--------------------------------------------------------------------------------
== Storage Services ==
  Simple Storage Service (S3)| * Designed to store and accesse any type of data
                             |   over the internet
                             | * It is a serverless service
                             | * Think of it as a bucket where you upload data
                             |   content. Theoretical size is unlimited
                             |
  S3 Glacier                 | * Least expensive storage solution, meant for
                             |   long term data archival
                             | * Not as readily accessable as S3, so should
                             |   only be used for Archieval purposes
                             |
  Elastic Block Store (EBS)  | * Low latency block device storage specifically
                             |   meant to attach to servers that are launched
                             |   with Amazon EC2 service - think a mounted
                             |   disk drive
                             |
  Elastic File System (EFS)  | * Network attached storage, allowing multiple
                             |   servers to access the same data source
                             |
  Storage Gateway            | * Enables hybrid storage between on-premise
                             |   environments and the AWS Cloud
                             | * Provides low-latency performance by caching
                             |   frequently used data on premises while storing
                             |   less frequently used data on Cloud storage
                             |   services
                             |
  Snowball (devices)         | * Portable, peta-byte scale, data storage device
                             |   that can be used to migrate large amouts of data
                             |   from on-premises environment over to the AWS
                             |   Cloud.
-- Hybrid Storage Example ------------------------------------------------------
  Using an S3 Bucket as a    | * Large scale data backup can be accomplished with
  disaster recovery solution |   a Snowball Device
                             | * Data syncing can be accomplished with the
                             |   AWS Storage Gateway
--------------------------------------------------------------------------------
AWS Database Services
  Relational Database Service| * A fully managed database service
  (RDS)                      | * Can launch variations of MySQL (MariaDB or
                             |   Amazon's enterpirse version called: Amazon Aurora,
                             |   PostgreSQL, also Amazon Postgres Aurora, MsSQL
                             |   and Oracle are also available
                             |
                             |
  DynamoDB                   | * AWS's noSQL Database as a service
                             | * Serverless database service
                             |
  Redshift                   | Fully managed, petabyte scale data warehouse based on
                             | Postgresql database engine.
                             |
  ElastiCache                | In-memory data store/cache.
                             | access data from fast, fully managed in-memory caches
                             |
  Database Migration Srvc    | Orchestarts the migration of databases over to AWS
  (DMS)                      | easily and securely. Can also migrated databases from one
                             | type to another
                             |
  Neptune                    | Fast, reliable, fully managed, high performacne graph database
                             | engine optimized for storing billions of relationships.
                             |
------------------------------------------------------------------------------------------
== AWS Compute Services ==
  Elastic Compute Cloud      | Provides virtual servers in AWS Cloud
  (EC2)                      |
                             |
  EC2 Autoscaling            | Dynamically scale your EC2 Capacity with set thresholds
                             |
  Amazon Lightsail           | An easy method for launching virtual servers running
                             | applications
                             |
  Elastic Container Service  | Highly scaleable, high performance container managment
  (ECS)                      | service (docker containers)
                             |
  AWS Lambda                 | Serverless service - allows you to run code without
                             | a server
                             |
  Elastic Load Balancer      |
                             |
------------------------------------------------------------------------------------------
== Networking & Content Delivery ==
  CloudFront                 | Global Content Delivery Network (CDN)
                             |
                             | Let's you provision logically isolated section of the AWS
  Virtual Private Cloud (VPC)| cloud, which lets you deploy self-defined aws services
                             |
  Direct Connect             | High speed dedicated connection to AWS
                             |
  Elastic Load Balancing     | automatically distributes incoming traffic for your application
  (ELB)                      | across multiple EC2 instances and also across multiple
                             | availibility zones
                             |
  Route 53                   | Highly available Domain Name System
                             |
  API Gateway                | fully managed service that allows to create and deploy
                             | APIs at any scale
------------------------------------------------------------------------------------------
