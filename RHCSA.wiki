--------------------------------------------------------------------------------
= Red Hat Certified System Administrator Certification Training notes =
--------------------------------------------------------------------------------
= LBD RHCSA notes =
--------------------------------------------------------------------------------
[[certs/rhcsa/Exam-objectives|The RHCSA Exam Objectives]]
--------------------------------------------------------------------------------
[[certs/rhcsa/exam-taking-notes|Notes on taking the Exam]]

== Chapter 1 - Local Installation ==
=== Installation Logs ===
[[certs/rhcsa/installation-logs|Installation Logs]]
=== Virtual console Screens (during installation) ===
[[certs/rhcsa/installation-virtual-console-screens|Virtual Console Screens]]

[[certs/rhcsa/review-questions|Review Questions]]
--------------------------------------------------------------------------------
== Chapter 5 - Connecting to RedHat Enterpirse Linux 8 ==
  Terms                      |
  Console                    | A Console is the environment the user is looking
                             | at
                             |
  Terminal                   | A Terminal is an environment that is opened on
                             | the console and provides access to a text shell,
                             | which is the command-line environment that can be
                             | used to type commands
                             |
                             | You can have multiple terminals open on a
                             | console, but you cannot have multiple consoles
                             | open in one terminal
                             |
  Virtual Terminals          | To open these terminal windows, you can use the
                             | key sequences Alt-F1 through Alt-F6
                             |
                             | *F1*: Gives access to the GNOME Display Manager
                             | (GDM) graphical login. --> */dev/tt1*
                             |
                             | *F2*: Provides access to the current graphical
                             | console  --> */dev/tt2*
                             |
                             | *F3*: Gives access back to the current graphical
                             | session  --> */dev/tt3*
                             |
                             | *F4-F6*: Gives access to nongraphical consoles
                             | */dev/tt4 - /dev/tt6*
                             |
                             | A convenient alternative to using the Alt-
                             | Function key sequence is offered by the *chvt*
                             | command.
                             |
  Shutting down              | systemctl reboot or reboot
                             | systemctl halt or halt
                             | systemctl poweroff or poweroff
                             |
                             | If the above don't work
                             | echo b > /proc/sysrq-trigger
                             |
  SSH                        |
  Starting graphical apps    | There are two requirements:
  through sssh               | * An X server must be running on the client
                             |   computer. The X server is the software
                             |   component that creates the graphical
                             |   screens.
                             |
                             | * The remote host must be allowd to display
                             |   screens on the local computer
                             |
    Options                  | -v : Verbose; Shows the detail what is happening
                             |      while establishing the connection
                             |
                             | -Y : Enables support for graphical applications
                             |
  rsync                      | Options:
                             | -r : Synchronizes the entire directory tree
                             | -l : Also synchronizes symbolic links
                             | -p : Preserves symbolic links
                             | -n : Performs only a dry run, not actual
                             |      synchronizing anything
                             | -a : Users archive mode, thus ensuring that
                             |      entire subdirectory trees and all file
                             |      properties will be synchronized
                             | -A : Uses archive mode, and in addition
                             |      synchronizes ACLs
                             | -X : Synchronizes SELinux context as well
                             |
--------------------------------------------------------------------------------
== Chapter 6 - User and Group Management ==
  Get information on a user  | id <USERNAME>
                             |
  Methods to Run tasks with  | su - opens a subsheel as a different user, with
  elevated permissions       |      the advantage that commands are executed as
                             |      root only in the subshell
                             |
                             | sudo - Enables you to set up an environment where
                             |        specific tasks are executed with
                             |        administrative privileges
                             |
                             | PolicyKit - Enables you to set up graphical
                             |             utilities to run with administrative
                             |             privileges
                             |
  Elevating privileges for   | using *visudo*
  specific commands for a    | (username) ALL=/usr/bin/useradd,/usr/bin/passwd
  user                       |
                             |
  PolicyKit                  | Associated man pages:
                             | *pkexec*, *polkit*
                             |
  /etc/passwd                | Field summary
                             | * Username
                             | * Password
                             | * UID
                             | * GID
                             | * Comment Field
                             | * Directory (home directory)
                             | * Shell
                             |
  /etc/shadow                | Field Summary
                             | * Login name
                             | * Encrypted password
                             | * Days since Jan. 1, 1970, that the password was last changed
                             | * Days before password may be changed
                             | * Days after which password must be changed
                             | * Days after password expires that account is disabled
                             | * Days since Jan. 1, 1970, that account is disabled
                             | * A reserved field, which was once added "for future use"
                             |
  Create users               | Here are some ways to create users
                             | * vipw - used to edit /etc/password and /etc/shadow
                             | * useradd
                             |
    Example                  | useradd -m -u 1201 -G sales,ops linda
                             |
  Remove users               | * userdel (-r to remove a user and the complete user
                             |   environment)
                             |
  Managing User Properties   | For changing user properties, you can either
                             | work directly in the configuration files uise
                             | *vipw* or use can user *usermod*
                             |
  Configuration files for    | When you're working with tools such as useradd,
  user management defaults   | some default values are assumed. These default
                             | values are set in two configuration files:
                             | * /etc/login.defs
                             | * /etc/default/useradd
                             |
  defaults in                | In the file /etc/login.defs, different login related
  /etc/login.defs            | variables are set. This file ise used by different
                             | commands, and it relates to setting up the
                             | appropriate environment for new users. Here is a
                             | list of some of the most significant properties
                             |
                             | * MOTD_FILE: Defines the file that is used as
                             |   the "message of the day" file. In this file,
                             |   you can include messages to be displayed after
                             |   the user has successflly logged in to the sever.
                             |
                             | * ENV_PATH: Defines the $PATH variable,
                             | * PASS_MAX_DAYS, PASS_MIN_DAYS, PASS_WARN_AGE:
                             |   Define the default password expiration
                             |   properties when creating new users
                             | * UID_MIN: Indicates the first UID to use when
                             |   creating new users
                             |
  Managing Password          | passwd
  Properties                 |   Example: passwd -n 30 -w 3 -x 90 lind
                             |     sets the password to a minimal usage period
                             |     of 30 days and an expiry after 90 days, where
                             |     a warning is generated 3 days before expiry
                             |
                             | chage:
                             |   Example: chage -E 2025-12-31 bob
                             |     -E = expiration date
                             |     -I = interactive
                             |
  Creating a User Environment| Files used in creating a user environment
                             | * /etc/profile: Used for default settings for
                             |      all users when starting a login shell
                             | * /etc/bashrc: Used to define defaults for all
                             |      users when starting a subshell
                             | * ~/.profile: Specific settings for one user
                             |     applied when starting a login shell
                             | * ~/.bashrc: Specific settings for one user applied when starting a subshell
                             |
  Createing groups           | vigr
                             |
    /etc/group fields        | * Group name:
                             | * Group password
                             | * Group ID
                             | * Members
                             |
  Using groupadd to Create   | groupadd <name of new group>
  Groups                     |   - g : specify a group I
                             |
  Managing Group Properties  |
    Change the name or group | groupmod
    id                       |
                             |
    Add members to a group   | usermod -aG
                             |
    find out what groups a   | groupmems
    user is member of        |   example: groupmems -g sales -l
                             |
--------------------------------------------------------------------------------
== Chapter 7 - Permissions Management ==
  *Displaying ownership*       | ls -l
                             |
  list of all files on system| find / -user {username}
  of a given user or group   | find / -group {groupname}
                             |
  *Changing User Ownership*    | chown {who} {what}
                             | -R    <-- recursively
                             |
  *Changing Group Ownership*   | chown .{group} {where}    <--- dot in front of group name
                             | chown :{group} {where}    <--- colon in front of group name - Produces same as above
                             |
    can also change group    | chgrp -r {group} {location}    <--- recursively
    ownership                |
                             |
  *Show current effective*     | groups {username}
  *group*                      |
                             |
  *Change the effective*       | newgrp {name of group}
  *group for the current*      |
  *session*                    |
                             |
  Understanding read/write   | *Permission*     *Applied to Files*            *Applied to Directories*
  permissions                | Read           Open a file                 List contents of directory
                             | Write          Change contents of a file   Create and delete files
                             | Execute        Run a program file          Change to the directory
                             |
  *Understanding Advanced*     |
  *Permissions*                |
                             |
    Set User ID (sUID)       | On executable files - runs a file with the same
                             | permissions as the file owner
                             |
                             | sets an "s" were "x" would normally be --> -rw*s*r -xr-x root root 33424  Feb 18 2022 /usr/bin/passwd
                             |
    Set Group ID (SGID)      | On executable file - it gives the runner of the
                             | file the group permissions of the file
                             |
                             | On directorys - it sets the default group ownership
                             | of all files created within the directory
                             |
                             | sets an "s" were "x" would normally be --> drwxr-*s*r-x. 2  root  account 4096 Apr 30 21:28 account
                             |
    Sticky bit               | Prevents users from deleting files that they didn't create
                             | When using ls -l, you can see sticky bit as a *t*
                             | at the position where you normally see the execute
                             | permission for others
                             |
                             |   drwxr-sr-t. 2 root account 4096 Apr 30 21:28 account/
                             |
  *Applying Advanced*          | * For SUID, use *chmod u+s*
  *Permissions*                | * For SGID, use *chmod g+s*
                             | * For sticky bit, use *chmod +t* followe by the
                             |   name of the file or the directory that you
                             |   want to set a the permissions on.
                             |
                             | Special Permissions summary
                             |
                             | *Permissions*    *Numeric Value*   *Relative Value*    *On Files*                    *On Directories*
                             | SUID           4               u+s               User executes file with     no meaning
                             |                                                  permissions of file owner
                             | SGID           2               g+s               User executes file with     Files created in directory get
                             |                                                  permissions of group owner  the same group owner
                             | Sticky bit     1               +t                No Meaning                  Prevents users from deleting
                             |                                                                              files from other users
  *Managine ACLs*              |
    Backing up ACLs          | getfacl -R /directory > file.acls
    Restoring ACLS           | setfacl --restor=file.acl
                             |
    Set ACLs                 | setfacl -m(odify) g:<groupname>:<permissions_to_apply> /path/to/file
                             | setfacl -m u:<username>:<permissions_to_apply> /path/to/file
                             | setfacl -R(ecursively) -m u:<username>:- /path/to/file (removes all permisions for username to all files in path)
                             |
    Set Default ACL          |
                             |
    Set ACL so that all      | setfacl -m *d*:g:sales:rx /data (-d = default)
    permissions are set on   |     (all new files created in this directory will
    all new files            |     inherit permissions, but do not change pre-
                             |     existing files)
                             |
                             |     setfacl -R -m    --> modify ACLs for current files
                             |     setfacl -m d:    --> take care of all new items
                             |
    disable permissions for  | setfacl -m d:o::- /data
    'others'                 |     -m (modify) d: (default) o: (others) ::
                             |
                             |
  *Setting Default*            | The maximu settings for:
  *Permissions with umask*     | files = 666
                             | directories = 777
                             |
  umask values and their     | Value    Applied to Files    Applied to Directories
  results                    | 0        Read and write      Everything
                             | 1        Read and write      Read and Write
                             | 2        Read                Read and execute
                             | 3        Read                Read
                             | 4        Write               Write and execute
                             | 5        Write               Write
                             | 6        Nothing             Execute
                             | 7        Nothhing            Nothing
                             |
  change umask for all users | All users: /etc/profile
  and individual users       |            /etc/profile.d/umask.sh  <-- correct approach
                             |
                             | Individual users: ~/.profile        <-- can be set in /etc/skel/.bashrc
                             |
  *Working with User*-         | chatter (+|- attribute) (file)  <change attribute>
  *Extended Attributes*        | lsattr (file)                  <list attributes>
                             |
                             | Brief description of attributes
                             | *A* - This attribute ensures that the file
                             |     access time of the file is *not* modified
                             | *a* - allows a file to be added, but not to be
                             |     removed
                             | *c* - if volume level compression is supported,
                             |     ensurse that file is compressed the first
                             |     time the compression engine become active
                             | *D* - changes to files ar ewritten to disk
                             |     immediately
                             | *d* - makes sure files will not be backed up
                             | *I* - enables indexing for the directory where it is enabled
                             | *i* - makes file immutable
                             | *j* - On Ext3 file systems, the file is first
                             |     written to the journal and then to harddrive
                             | *s* - This attribute overwrites the blocks where the
                             |     file was store with 0s after the file has been
                             |     deleted
                             | *u* - Saves undeleted information
                             |
--------------------------------------------------------------------------------
== Chapter 8 - Configuring Networking ==
  Terms                      |
    CIDR                     | Classless interdomain Routing Notation: Indicates
                             |   the number of bits in in the subnet mask
                             |
  Network Fundamentals       | *IPv4 Addresses* - These are based on 32-bit
                             |   addresses and have four octets, separated by
                             |   dots.
                             |
                             | *IPv6 Addresses* - These are based on 128-bit
                             |   addresses and are written in eight groups of
                             |   hexadeimal numbers that are 16-bits each and
                             |   separated by colons.
                             |
  Private network Addresses  | * 10.0.0.0/8 (a single Class A Network)
                             | * 172.16.0.0/12 (16 Class B networks)
                             | * 192.168.0.0/16 (256 Class C networks)
                             |
  Variable length subnet     | IP Address (example)
  masks                      | 212.209l.113.33 = 11010100.11010001.00001010.00100001
                             |
                             | Subnet mask
                             | /27 = 11111111.11111111.11111111.11100000
                             |
  Binary-Decimal Conversion  | *Binary Value      Decimal Value*
  Overview                   | 00000000         0
                             | 00100000         32
                             | 01000000         64
                             | 01100000         96
                             | 10000000         128
                             | 10100000         160
                             | 11000000         192
                             | 11100000         224
                             |
  MAC Addresses              | MAC addresses consists of two parts. The first 6
                             | bytes is the vendor ID, and the second 6 bytes is
                             | the unique node ID
                             |
  *Managing Network*           | In RHEL 8, the default names for network cards are
  *addresses and Interfaces*   | based on firmware, device topology, and device types.
                             | This leads  to network card names that always consist
                             | of the following parts:
                             | * Ethernet interfaces begin with *en*, WLAN interf-
                             |   aces begin with *wl*, and WWAN interfaces begin with
                             |   *ww*
                             | * The next part of the name represents the type
                             |   of adapter. An *o* is used for onboard, *s* is for a
                             |   hotplug slot, and *p* is for a PCI location.
                             |   Administrators can also use x to create a device
                             |   name that is based on the MAC address of the
                             |   network card
                             | * The follows a number, which is used to
                             |   represent an index, ID, or port
                             | * IF the fixed name cannot be determined,
                             |   traditional names such as eth0 are used.
                             |
                             | Also, network cards can be named based on the
                             | BIOS device name as well. In this naming scheme,
                             | names such as em1 (embedded network card 1) or
                             | p4p1 (which is PCI slot 4, port 1) can be used.
                             | To use this kind of naming, the biosdevname
                             | package must be used
                             |
  *Validating Network*         |
  *Configuration*              |
                             |
    configure/monitory       | ip addr
    network Addresses        |
                             |
    configure/monitory       | ip route
    routing information      |
                             |
    configure/monitory       | ip link
    network link staten      |
                             |
    Viewing Netowkr State    | ip a(ddress) s(how)
                             | -s  (statistics)
                             |
    View only link state     | ip -s link show
                             |
    Add ip address           | ip a(ddr) a(add) <new_ip_address> dev <interface_name>
                             |   example: ip a add 10.0.0.10/24 dev ens18
                             |
                             |
    Temporarily bring up     | ip link set dev <device_name> up
    interface                |   example: ip link set dev ens33 up
                             |
    view listening ports     | ss -lt  (t = tcp)
                             | ss -tul (t = tcp, u = udp)
                             |
  *Configuring Network*        |
  *configuration with nmtui*   |
  *and nmcli*                  |
    View NetworkManager      | systemctl status NetworkManager
    status                   |
                             |
    Location of Network card | /etc/sysconfig/network-scripts/
    configuration scripts    |     (the scripts start with *ifcfg* followed by
                             |     network card name)
                             |
    Difference between       | * A device is a network interface card
    device and connection    | * A connection is the configuration that is used on a device.
                             |
    Tools used to manage     | * nmcli  ---> command line tool
    network devices and      | * nmtui  ---> same as above, but with text user interface
    connections              |
                             |
    Check permissions to     | nmcli gen permissions
    change network configu-  |
                             |
    Show all connections     | nmcli con show
                             | nmcli con show <dev_name>  <--- shows more information
                             |
    Man page for connection  | man 5 nm-settings
    settings                 |
                             |
    List all devices         | nmcli dev show
                             |
    show settings for        | nmcli dev show <device_name>
    specific device          |
                             |
    Create a new network     | nmcli con add <con-name> dhcp type ethernet ifname <iface name> ipv4.method auto
    connection               | nmcli con add con-name static ifname ens33 autoconnect no type ethernet ip4 10.0.0.10/s4 gw4 10.0.0.1 ipv4.method manual
                             |
    nmcli-examples man page  | man nmcli-examples
                             |
  *Working with hostnames*     |
                             |
   Different ways to change  | * Use *nmtui* and select the option *Change Hostname*
   the hostname:             | * Use *hostnamectl set-hostname*
                             | * Edit the contents of the configuration file /etc/hostname
                             |     example: hostnamectl set-hostnamem myhost.example.com
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
                             |
--------------------------------------------------------------------------------
== Man ==
Manpage types                | 1   Executable programs or shell commands
                             | 2   System calls (functions provided by the kernel)
                             | 3   Library calls (functions within program libraries)
                             | 4   Special files (usually found in /dev)
                             | 5   File formats and conventions, e.g. /etc/passwd
                             | 6   Games
                             | 7   Miscellaneous (including  macro  packages  and  conventions),  e.g. man(7), groff(7)
                             | 8   System administration commands (usually only for root)
                             | 9   Kernel routines [Non standard]
                             |
search mandb based on keyword| man -k | apropos
rebuild mandb                | mandb
                             |
--------------------------------------------------------------------------------
== Finding Files ==
Search for binaries in PATH  | which
Search from local db         | locate -> updatedb
General search               | find
                             | find / -name fstab  -> search by name (can use globbing)
                             | find / -type f -size +100M -> search all files larger than 100M
                             | find / -user student -> search all files owned by student
                             |
--------------------------------------------------------------------------------
== Globbing ==
Glob any number of chars     | *
Glob 1 of any char           | ?
Glob 1 of a list of chars    | [hm] -> either h or m
Exclued 1 of a list of chars | [!hm] -> any char except h or m
Glob 1 of a range of numbers | [0-9] -> any number between 0 and 9
                             |
--------------------------------------------------------------------------------
== RPM ==
Install package              | rpm -i telnet.rpm
remove package               | rpm -e telent.rpm
query package                | rpm -q telnet.rpm
                             |
*** NOTE - rpm does not resolve dependencies
YUM - package manager which uses rpms
Install package              | yum install ansible
View YUM Repos               | yum repolist
                             |
--------------------------------------------------------------------------------
== Working with Linux Files - Permissions / Links ==
  Hard / Soft Links          | Hard Link:
                             |   * Additional name for an existing file
                             |   * Can't be created for directories
                             |   * Can't cross filesystem boundaries or partitions
                             |   * Same inode number and permissions as original file
                             |
                             | Soft Link
                             |   * Special file that points to another file
                             |   * Can be created for directories
                             |   * Can cross filesystem boundaries or partitions
                             |   * Different indoe number and file permissions than original
                             |   * Doesn't contain file data
                             |
  umask                      | The file creation mask (umask) sets permissions for new files/directories
                             | The umask is subtractive: it removes the persissioms from default permisions
                             |
                             | Default permissions for files is 666; directories are 777
                             |
                             | umask value    File Permissions    Directory Permissions
                             | 002            -rw-rw-r--          drwxrwxr-x
                             | 007            -rw-rw----          drwxrwx---
                             | 022            -rw-r--r--          drwxr-xr-x
                             | 027            -rw-r-----          drwxr-x---
                             | 077            -rw-------          drwx------
                             |
--------------------------------------------------------------------------------
